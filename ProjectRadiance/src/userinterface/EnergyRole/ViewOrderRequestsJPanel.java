/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EnergyRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.EnergyOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EquipmentWorkRequest;
import Business.WorkQueue.MaterialWorkRequest;
import Business.WorkQueue.ElectricityWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sanskruti  <your.name at your.org>
 */
public class ViewOrderRequestsJPanel extends javax.swing.JPanel {
    
     private JPanel userProcessContainer;
    private EnergyOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;

    /**
     * Creates new form ViewOrderRequestsJPanel
     */
    public ViewOrderRequestsJPanel(JPanel userProcessContainer, UserAccount account, EnergyOrganization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.system =system;
        populateElectricityRequestTable();
    }
    
    public void populateElectricityRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable1.getModel();
        String result;
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if(request instanceof ElectricityWorkRequest || request instanceof MaterialWorkRequest || request instanceof EquipmentWorkRequest){
            Object[] row = new Object[4];
            row[0] = request.getMessage();
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            if(request instanceof ElectricityWorkRequest){
            result = ((ElectricityWorkRequest) request).getTestResult();
            }
            else if(request instanceof MaterialWorkRequest){
            result = ((MaterialWorkRequest) request).getTestResult();
            }
            else
                 result = ((EquipmentWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            
            model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        workRequestJTable1 = new javax.swing.JTable();
        refreshTestJButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable1.setBackground(new java.awt.Color(102, 102, 102));
        workRequestJTable1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        workRequestJTable1.setForeground(new java.awt.Color(255, 255, 255));
        workRequestJTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(workRequestJTable1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 115, 925, 120));

        refreshTestJButton1.setBackground(new java.awt.Color(0, 0, 0));
        refreshTestJButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        refreshTestJButton1.setForeground(new java.awt.Color(255, 255, 255));
        refreshTestJButton1.setText("Refresh");
        refreshTestJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButton1ActionPerformed(evt);
            }
        });
        add(refreshTestJButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 74, 100, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/123.jpg"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 890));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTestJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButton1ActionPerformed
        // TODO add your handling code here:
        populateElectricityRequestTable();
    }//GEN-LAST:event_refreshTestJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshTestJButton1;
    private javax.swing.JTable workRequestJTable1;
    // End of variables declaration//GEN-END:variables
}
